// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serialize.proto

#ifndef PROTOBUF_serialize_2eproto__INCLUDED
#define PROTOBUF_serialize_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace serialize {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_serialize_2eproto();
void protobuf_AssignDesc_serialize_2eproto();
void protobuf_ShutdownFile_serialize_2eproto();

class Complex;
class Container_Map;
class Container_Vec;
class Ints;
class Mixed;

enum ENUMERATION {
  ONE = 0,
  TWO = 1,
  THREE = 2,
  FOUR = 3,
  ENUMERATION_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ENUMERATION_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ENUMERATION_IsValid(int value);
const ENUMERATION ENUMERATION_MIN = ONE;
const ENUMERATION ENUMERATION_MAX = FOUR;
const int ENUMERATION_ARRAYSIZE = ENUMERATION_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENUMERATION_descriptor();
inline const ::std::string& ENUMERATION_Name(ENUMERATION value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENUMERATION_descriptor(), value);
}
inline bool ENUMERATION_Parse(
    const ::std::string& name, ENUMERATION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENUMERATION>(
    ENUMERATION_descriptor(), name, value);
}
// ===================================================================

class Ints : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:serialize.Ints) */ {
 public:
  Ints();
  virtual ~Ints();

  Ints(const Ints& from);

  inline Ints& operator=(const Ints& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ints& default_instance();

  void Swap(Ints* other);

  // implements Message ----------------------------------------------

  inline Ints* New() const { return New(NULL); }

  Ints* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ints& from);
  void MergeFrom(const Ints& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Ints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional int64 int1 = 2;
  void clear_int1();
  static const int kInt1FieldNumber = 2;
  ::google::protobuf::int64 int1() const;
  void set_int1(::google::protobuf::int64 value);

  // optional int64 int2 = 3;
  void clear_int2();
  static const int kInt2FieldNumber = 3;
  ::google::protobuf::int64 int2() const;
  void set_int2(::google::protobuf::int64 value);

  // optional sint32 int3 = 4;
  void clear_int3();
  static const int kInt3FieldNumber = 4;
  ::google::protobuf::int32 int3() const;
  void set_int3(::google::protobuf::int32 value);

  // optional sint32 int4 = 5;
  void clear_int4();
  static const int kInt4FieldNumber = 5;
  ::google::protobuf::int32 int4() const;
  void set_int4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:serialize.Ints)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 int1_;
  ::google::protobuf::int64 int2_;
  ::google::protobuf::int32 int3_;
  ::google::protobuf::int32 int4_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static Ints* default_instance_;
};
// -------------------------------------------------------------------

class Mixed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:serialize.Mixed) */ {
 public:
  Mixed();
  virtual ~Mixed();

  Mixed(const Mixed& from);

  inline Mixed& operator=(const Mixed& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mixed& default_instance();

  void Swap(Mixed* other);

  // implements Message ----------------------------------------------

  inline Mixed* New() const { return New(NULL); }

  Mixed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mixed& from);
  void MergeFrom(const Mixed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Mixed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional sint32 int1 = 2;
  void clear_int1();
  static const int kInt1FieldNumber = 2;
  ::google::protobuf::int32 int1() const;
  void set_int1(::google::protobuf::int32 value);

  // optional sint64 int2 = 3;
  void clear_int2();
  static const int kInt2FieldNumber = 3;
  ::google::protobuf::int64 int2() const;
  void set_int2(::google::protobuf::int64 value);

  // optional uint32 uint1 = 4;
  void clear_uint1();
  static const int kUint1FieldNumber = 4;
  ::google::protobuf::uint32 uint1() const;
  void set_uint1(::google::protobuf::uint32 value);

  // optional double float1 = 5;
  void clear_float1();
  static const int kFloat1FieldNumber = 5;
  double float1() const;
  void set_float1(double value);

  // optional string text1 = 6;
  void clear_text1();
  static const int kText1FieldNumber = 6;
  const ::std::string& text1() const;
  void set_text1(const ::std::string& value);
  void set_text1(const char* value);
  void set_text1(const char* value, size_t size);
  ::std::string* mutable_text1();
  ::std::string* release_text1();
  void set_allocated_text1(::std::string* text1);

  // optional .serialize.ENUMERATION enum1 = 7;
  void clear_enum1();
  static const int kEnum1FieldNumber = 7;
  ::serialize::ENUMERATION enum1() const;
  void set_enum1(::serialize::ENUMERATION value);

  // @@protoc_insertion_point(class_scope:serialize.Mixed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 int1_;
  ::google::protobuf::int64 int2_;
  double float1_;
  ::google::protobuf::uint32 uint1_;
  int enum1_;
  ::google::protobuf::internal::ArenaStringPtr text1_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static Mixed* default_instance_;
};
// -------------------------------------------------------------------

class Container_Vec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:serialize.Container_Vec) */ {
 public:
  Container_Vec();
  virtual ~Container_Vec();

  Container_Vec(const Container_Vec& from);

  inline Container_Vec& operator=(const Container_Vec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Container_Vec& default_instance();

  void Swap(Container_Vec* other);

  // implements Message ----------------------------------------------

  inline Container_Vec* New() const { return New(NULL); }

  Container_Vec* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Container_Vec& from);
  void MergeFrom(const Container_Vec& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Container_Vec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional sint64 int1 = 2;
  void clear_int1();
  static const int kInt1FieldNumber = 2;
  ::google::protobuf::int64 int1() const;
  void set_int1(::google::protobuf::int64 value);

  // optional string text1 = 3;
  void clear_text1();
  static const int kText1FieldNumber = 3;
  const ::std::string& text1() const;
  void set_text1(const ::std::string& value);
  void set_text1(const char* value);
  void set_text1(const char* value, size_t size);
  ::std::string* mutable_text1();
  ::std::string* release_text1();
  void set_allocated_text1(::std::string* text1);

  // repeated string stringvec = 4;
  int stringvec_size() const;
  void clear_stringvec();
  static const int kStringvecFieldNumber = 4;
  const ::std::string& stringvec(int index) const;
  ::std::string* mutable_stringvec(int index);
  void set_stringvec(int index, const ::std::string& value);
  void set_stringvec(int index, const char* value);
  void set_stringvec(int index, const char* value, size_t size);
  ::std::string* add_stringvec();
  void add_stringvec(const ::std::string& value);
  void add_stringvec(const char* value);
  void add_stringvec(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& stringvec() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stringvec();

  // repeated int64 intvec = 5;
  int intvec_size() const;
  void clear_intvec();
  static const int kIntvecFieldNumber = 5;
  ::google::protobuf::int64 intvec(int index) const;
  void set_intvec(int index, ::google::protobuf::int64 value);
  void add_intvec(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      intvec() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_intvec();

  // @@protoc_insertion_point(class_scope:serialize.Container_Vec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 int1_;
  ::google::protobuf::internal::ArenaStringPtr text1_;
  ::google::protobuf::RepeatedPtrField< ::std::string> stringvec_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > intvec_;
  mutable int _intvec_cached_byte_size_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static Container_Vec* default_instance_;
};
// -------------------------------------------------------------------

class Container_Map : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:serialize.Container_Map) */ {
 public:
  Container_Map();
  virtual ~Container_Map();

  Container_Map(const Container_Map& from);

  inline Container_Map& operator=(const Container_Map& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Container_Map& default_instance();

  void Swap(Container_Map* other);

  // implements Message ----------------------------------------------

  inline Container_Map* New() const { return New(NULL); }

  Container_Map* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Container_Map& from);
  void MergeFrom(const Container_Map& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Container_Map* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional sint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional sint64 int1 = 2;
  void clear_int1();
  static const int kInt1FieldNumber = 2;
  ::google::protobuf::int64 int1() const;
  void set_int1(::google::protobuf::int64 value);

  // optional string text1 = 3;
  void clear_text1();
  static const int kText1FieldNumber = 3;
  const ::std::string& text1() const;
  void set_text1(const ::std::string& value);
  void set_text1(const char* value);
  void set_text1(const char* value, size_t size);
  ::std::string* mutable_text1();
  ::std::string* release_text1();
  void set_allocated_text1(::std::string* text1);

  // map<sint32, string> map1 = 4;
  int map1_size() const;
  void clear_map1();
  static const int kMap1FieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      map1() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_map1();

  // @@protoc_insertion_point(class_scope:serialize.Container_Map)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 int1_;
  ::google::protobuf::internal::ArenaStringPtr text1_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      Container_Map_Map1Entry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > map1_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static Container_Map* default_instance_;
};
// -------------------------------------------------------------------

class Complex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:serialize.Complex) */ {
 public:
  Complex();
  virtual ~Complex();

  Complex(const Complex& from);

  inline Complex& operator=(const Complex& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Complex& default_instance();

  void Swap(Complex* other);

  // implements Message ----------------------------------------------

  inline Complex* New() const { return New(NULL); }

  Complex* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Complex& from);
  void MergeFrom(const Complex& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Complex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string text1 = 2;
  void clear_text1();
  static const int kText1FieldNumber = 2;
  const ::std::string& text1() const;
  void set_text1(const ::std::string& value);
  void set_text1(const char* value);
  void set_text1(const char* value, size_t size);
  ::std::string* mutable_text1();
  ::std::string* release_text1();
  void set_allocated_text1(::std::string* text1);

  // optional string text2 = 3;
  void clear_text2();
  static const int kText2FieldNumber = 3;
  const ::std::string& text2() const;
  void set_text2(const ::std::string& value);
  void set_text2(const char* value);
  void set_text2(const char* value, size_t size);
  ::std::string* mutable_text2();
  ::std::string* release_text2();
  void set_allocated_text2(::std::string* text2);

  // optional string text3 = 4;
  void clear_text3();
  static const int kText3FieldNumber = 4;
  const ::std::string& text3() const;
  void set_text3(const ::std::string& value);
  void set_text3(const char* value);
  void set_text3(const char* value, size_t size);
  ::std::string* mutable_text3();
  ::std::string* release_text3();
  void set_allocated_text3(::std::string* text3);

  // optional sint32 int1 = 5;
  void clear_int1();
  static const int kInt1FieldNumber = 5;
  ::google::protobuf::int32 int1() const;
  void set_int1(::google::protobuf::int32 value);

  // optional sint32 int2 = 6;
  void clear_int2();
  static const int kInt2FieldNumber = 6;
  ::google::protobuf::int32 int2() const;
  void set_int2(::google::protobuf::int32 value);

  // optional sint32 int3 = 7;
  void clear_int3();
  static const int kInt3FieldNumber = 7;
  ::google::protobuf::int32 int3() const;
  void set_int3(::google::protobuf::int32 value);

  // optional string text4 = 8;
  void clear_text4();
  static const int kText4FieldNumber = 8;
  const ::std::string& text4() const;
  void set_text4(const ::std::string& value);
  void set_text4(const char* value);
  void set_text4(const char* value, size_t size);
  ::std::string* mutable_text4();
  ::std::string* release_text4();
  void set_allocated_text4(::std::string* text4);

  // optional .serialize.ENUMERATION enum1 = 9;
  void clear_enum1();
  static const int kEnum1FieldNumber = 9;
  ::serialize::ENUMERATION enum1() const;
  void set_enum1(::serialize::ENUMERATION value);

  // optional double float1 = 10;
  void clear_float1();
  static const int kFloat1FieldNumber = 10;
  double float1() const;
  void set_float1(double value);

  // optional int64 int4 = 11;
  void clear_int4();
  static const int kInt4FieldNumber = 11;
  ::google::protobuf::int64 int4() const;
  void set_int4(::google::protobuf::int64 value);

  // optional uint32 uint1 = 12;
  void clear_uint1();
  static const int kUint1FieldNumber = 12;
  ::google::protobuf::uint32 uint1() const;
  void set_uint1(::google::protobuf::uint32 value);

  // optional uint64 uint2 = 13;
  void clear_uint2();
  static const int kUint2FieldNumber = 13;
  ::google::protobuf::uint64 uint2() const;
  void set_uint2(::google::protobuf::uint64 value);

  // optional int64 int5 = 14;
  void clear_int5();
  static const int kInt5FieldNumber = 14;
  ::google::protobuf::int64 int5() const;
  void set_int5(::google::protobuf::int64 value);

  // optional sint32 int6 = 15;
  void clear_int6();
  static const int kInt6FieldNumber = 15;
  ::google::protobuf::int32 int6() const;
  void set_int6(::google::protobuf::int32 value);

  // optional double float2 = 16;
  void clear_float2();
  static const int kFloat2FieldNumber = 16;
  double float2() const;
  void set_float2(double value);

  // optional string text5 = 17;
  void clear_text5();
  static const int kText5FieldNumber = 17;
  const ::std::string& text5() const;
  void set_text5(const ::std::string& value);
  void set_text5(const char* value);
  void set_text5(const char* value, size_t size);
  ::std::string* mutable_text5();
  ::std::string* release_text5();
  void set_allocated_text5(::std::string* text5);

  // @@protoc_insertion_point(class_scope:serialize.Complex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr text1_;
  ::google::protobuf::internal::ArenaStringPtr text2_;
  ::google::protobuf::internal::ArenaStringPtr text3_;
  ::google::protobuf::int32 int1_;
  ::google::protobuf::int32 int2_;
  ::google::protobuf::internal::ArenaStringPtr text4_;
  ::google::protobuf::int32 int3_;
  int enum1_;
  double float1_;
  ::google::protobuf::int64 int4_;
  ::google::protobuf::uint64 uint2_;
  ::google::protobuf::uint32 uint1_;
  ::google::protobuf::int32 int6_;
  ::google::protobuf::int64 int5_;
  double float2_;
  ::google::protobuf::internal::ArenaStringPtr text5_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static Complex* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Ints

// optional int64 id = 1;
inline void Ints::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Ints::id() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.id)
  return id_;
}
inline void Ints::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.id)
}

// optional int64 int1 = 2;
inline void Ints::clear_int1() {
  int1_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Ints::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int1)
  return int1_;
}
inline void Ints::set_int1(::google::protobuf::int64 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int1)
}

// optional int64 int2 = 3;
inline void Ints::clear_int2() {
  int2_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Ints::int2() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int2)
  return int2_;
}
inline void Ints::set_int2(::google::protobuf::int64 value) {
  
  int2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int2)
}

// optional sint32 int3 = 4;
inline void Ints::clear_int3() {
  int3_ = 0;
}
inline ::google::protobuf::int32 Ints::int3() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int3)
  return int3_;
}
inline void Ints::set_int3(::google::protobuf::int32 value) {
  
  int3_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int3)
}

// optional sint32 int4 = 5;
inline void Ints::clear_int4() {
  int4_ = 0;
}
inline ::google::protobuf::int32 Ints::int4() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int4)
  return int4_;
}
inline void Ints::set_int4(::google::protobuf::int32 value) {
  
  int4_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int4)
}

// -------------------------------------------------------------------

// Mixed

// optional sint32 id = 1;
inline void Mixed::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Mixed::id() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.id)
  return id_;
}
inline void Mixed::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.id)
}

// optional sint32 int1 = 2;
inline void Mixed::clear_int1() {
  int1_ = 0;
}
inline ::google::protobuf::int32 Mixed::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.int1)
  return int1_;
}
inline void Mixed::set_int1(::google::protobuf::int32 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.int1)
}

// optional sint64 int2 = 3;
inline void Mixed::clear_int2() {
  int2_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Mixed::int2() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.int2)
  return int2_;
}
inline void Mixed::set_int2(::google::protobuf::int64 value) {
  
  int2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.int2)
}

// optional uint32 uint1 = 4;
inline void Mixed::clear_uint1() {
  uint1_ = 0u;
}
inline ::google::protobuf::uint32 Mixed::uint1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.uint1)
  return uint1_;
}
inline void Mixed::set_uint1(::google::protobuf::uint32 value) {
  
  uint1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.uint1)
}

// optional double float1 = 5;
inline void Mixed::clear_float1() {
  float1_ = 0;
}
inline double Mixed::float1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.float1)
  return float1_;
}
inline void Mixed::set_float1(double value) {
  
  float1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.float1)
}

// optional string text1 = 6;
inline void Mixed::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Mixed::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mixed::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Mixed.text1)
}
inline void Mixed::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Mixed.text1)
}
inline void Mixed::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Mixed.text1)
}
inline ::std::string* Mixed::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Mixed.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Mixed::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Mixed.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mixed::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Mixed.text1)
}

// optional .serialize.ENUMERATION enum1 = 7;
inline void Mixed::clear_enum1() {
  enum1_ = 0;
}
inline ::serialize::ENUMERATION Mixed::enum1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.enum1)
  return static_cast< ::serialize::ENUMERATION >(enum1_);
}
inline void Mixed::set_enum1(::serialize::ENUMERATION value) {
  
  enum1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.enum1)
}

// -------------------------------------------------------------------

// Container_Vec

// optional sint32 id = 1;
inline void Container_Vec::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Container_Vec::id() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.id)
  return id_;
}
inline void Container_Vec::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.id)
}

// optional sint64 int1 = 2;
inline void Container_Vec::clear_int1() {
  int1_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Container_Vec::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.int1)
  return int1_;
}
inline void Container_Vec::set_int1(::google::protobuf::int64 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.int1)
}

// optional string text1 = 3;
inline void Container_Vec::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Container_Vec::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Container_Vec::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.text1)
}
inline void Container_Vec::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Container_Vec.text1)
}
inline void Container_Vec::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Container_Vec.text1)
}
inline ::std::string* Container_Vec::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Container_Vec.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Container_Vec::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Container_Vec.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Container_Vec::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Container_Vec.text1)
}

// repeated string stringvec = 4;
inline int Container_Vec::stringvec_size() const {
  return stringvec_.size();
}
inline void Container_Vec::clear_stringvec() {
  stringvec_.Clear();
}
inline const ::std::string& Container_Vec::stringvec(int index) const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.stringvec)
  return stringvec_.Get(index);
}
inline ::std::string* Container_Vec::mutable_stringvec(int index) {
  // @@protoc_insertion_point(field_mutable:serialize.Container_Vec.stringvec)
  return stringvec_.Mutable(index);
}
inline void Container_Vec::set_stringvec(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.stringvec)
  stringvec_.Mutable(index)->assign(value);
}
inline void Container_Vec::set_stringvec(int index, const char* value) {
  stringvec_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:serialize.Container_Vec.stringvec)
}
inline void Container_Vec::set_stringvec(int index, const char* value, size_t size) {
  stringvec_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:serialize.Container_Vec.stringvec)
}
inline ::std::string* Container_Vec::add_stringvec() {
  // @@protoc_insertion_point(field_add_mutable:serialize.Container_Vec.stringvec)
  return stringvec_.Add();
}
inline void Container_Vec::add_stringvec(const ::std::string& value) {
  stringvec_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:serialize.Container_Vec.stringvec)
}
inline void Container_Vec::add_stringvec(const char* value) {
  stringvec_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:serialize.Container_Vec.stringvec)
}
inline void Container_Vec::add_stringvec(const char* value, size_t size) {
  stringvec_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:serialize.Container_Vec.stringvec)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Container_Vec::stringvec() const {
  // @@protoc_insertion_point(field_list:serialize.Container_Vec.stringvec)
  return stringvec_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Container_Vec::mutable_stringvec() {
  // @@protoc_insertion_point(field_mutable_list:serialize.Container_Vec.stringvec)
  return &stringvec_;
}

// repeated int64 intvec = 5;
inline int Container_Vec::intvec_size() const {
  return intvec_.size();
}
inline void Container_Vec::clear_intvec() {
  intvec_.Clear();
}
inline ::google::protobuf::int64 Container_Vec::intvec(int index) const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.intvec)
  return intvec_.Get(index);
}
inline void Container_Vec::set_intvec(int index, ::google::protobuf::int64 value) {
  intvec_.Set(index, value);
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.intvec)
}
inline void Container_Vec::add_intvec(::google::protobuf::int64 value) {
  intvec_.Add(value);
  // @@protoc_insertion_point(field_add:serialize.Container_Vec.intvec)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Container_Vec::intvec() const {
  // @@protoc_insertion_point(field_list:serialize.Container_Vec.intvec)
  return intvec_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Container_Vec::mutable_intvec() {
  // @@protoc_insertion_point(field_mutable_list:serialize.Container_Vec.intvec)
  return &intvec_;
}

// -------------------------------------------------------------------

// Container_Map

// optional sint32 id = 1;
inline void Container_Map::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Container_Map::id() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Map.id)
  return id_;
}
inline void Container_Map::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Map.id)
}

// optional sint64 int1 = 2;
inline void Container_Map::clear_int1() {
  int1_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Container_Map::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Map.int1)
  return int1_;
}
inline void Container_Map::set_int1(::google::protobuf::int64 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Map.int1)
}

// optional string text1 = 3;
inline void Container_Map::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Container_Map::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Map.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Container_Map::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Container_Map.text1)
}
inline void Container_Map::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Container_Map.text1)
}
inline void Container_Map::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Container_Map.text1)
}
inline ::std::string* Container_Map::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Container_Map.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Container_Map::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Container_Map.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Container_Map::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Container_Map.text1)
}

// map<sint32, string> map1 = 4;
inline int Container_Map::map1_size() const {
  return map1_.size();
}
inline void Container_Map::clear_map1() {
  map1_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
Container_Map::map1() const {
  // @@protoc_insertion_point(field_map:serialize.Container_Map.map1)
  return map1_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
Container_Map::mutable_map1() {
  // @@protoc_insertion_point(field_mutable_map:serialize.Container_Map.map1)
  return map1_.MutableMap();
}

// -------------------------------------------------------------------

// Complex

// optional int64 id = 1;
inline void Complex::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Complex::id() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.id)
  return id_;
}
inline void Complex::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.id)
}

// optional string text1 = 2;
inline void Complex::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Complex::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text1)
}
inline void Complex::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text1)
}
inline void Complex::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text1)
}
inline ::std::string* Complex::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Complex::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text1)
}

// optional string text2 = 3;
inline void Complex::clear_text2() {
  text2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Complex::text2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text2)
  return text2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_text2(const ::std::string& value) {
  
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text2)
}
inline void Complex::set_text2(const char* value) {
  
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text2)
}
inline void Complex::set_text2(const char* value, size_t size) {
  
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text2)
}
inline ::std::string* Complex::mutable_text2() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text2)
  return text2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Complex::release_text2() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text2)
  
  return text2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_allocated_text2(::std::string* text2) {
  if (text2 != NULL) {
    
  } else {
    
  }
  text2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text2);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text2)
}

// optional string text3 = 4;
inline void Complex::clear_text3() {
  text3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Complex::text3() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text3)
  return text3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_text3(const ::std::string& value) {
  
  text3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text3)
}
inline void Complex::set_text3(const char* value) {
  
  text3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text3)
}
inline void Complex::set_text3(const char* value, size_t size) {
  
  text3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text3)
}
inline ::std::string* Complex::mutable_text3() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text3)
  return text3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Complex::release_text3() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text3)
  
  return text3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_allocated_text3(::std::string* text3) {
  if (text3 != NULL) {
    
  } else {
    
  }
  text3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text3);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text3)
}

// optional sint32 int1 = 5;
inline void Complex::clear_int1() {
  int1_ = 0;
}
inline ::google::protobuf::int32 Complex::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int1)
  return int1_;
}
inline void Complex::set_int1(::google::protobuf::int32 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int1)
}

// optional sint32 int2 = 6;
inline void Complex::clear_int2() {
  int2_ = 0;
}
inline ::google::protobuf::int32 Complex::int2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int2)
  return int2_;
}
inline void Complex::set_int2(::google::protobuf::int32 value) {
  
  int2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int2)
}

// optional sint32 int3 = 7;
inline void Complex::clear_int3() {
  int3_ = 0;
}
inline ::google::protobuf::int32 Complex::int3() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int3)
  return int3_;
}
inline void Complex::set_int3(::google::protobuf::int32 value) {
  
  int3_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int3)
}

// optional string text4 = 8;
inline void Complex::clear_text4() {
  text4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Complex::text4() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text4)
  return text4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_text4(const ::std::string& value) {
  
  text4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text4)
}
inline void Complex::set_text4(const char* value) {
  
  text4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text4)
}
inline void Complex::set_text4(const char* value, size_t size) {
  
  text4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text4)
}
inline ::std::string* Complex::mutable_text4() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text4)
  return text4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Complex::release_text4() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text4)
  
  return text4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_allocated_text4(::std::string* text4) {
  if (text4 != NULL) {
    
  } else {
    
  }
  text4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text4);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text4)
}

// optional .serialize.ENUMERATION enum1 = 9;
inline void Complex::clear_enum1() {
  enum1_ = 0;
}
inline ::serialize::ENUMERATION Complex::enum1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.enum1)
  return static_cast< ::serialize::ENUMERATION >(enum1_);
}
inline void Complex::set_enum1(::serialize::ENUMERATION value) {
  
  enum1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.enum1)
}

// optional double float1 = 10;
inline void Complex::clear_float1() {
  float1_ = 0;
}
inline double Complex::float1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.float1)
  return float1_;
}
inline void Complex::set_float1(double value) {
  
  float1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.float1)
}

// optional int64 int4 = 11;
inline void Complex::clear_int4() {
  int4_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Complex::int4() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int4)
  return int4_;
}
inline void Complex::set_int4(::google::protobuf::int64 value) {
  
  int4_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int4)
}

// optional uint32 uint1 = 12;
inline void Complex::clear_uint1() {
  uint1_ = 0u;
}
inline ::google::protobuf::uint32 Complex::uint1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.uint1)
  return uint1_;
}
inline void Complex::set_uint1(::google::protobuf::uint32 value) {
  
  uint1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.uint1)
}

// optional uint64 uint2 = 13;
inline void Complex::clear_uint2() {
  uint2_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Complex::uint2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.uint2)
  return uint2_;
}
inline void Complex::set_uint2(::google::protobuf::uint64 value) {
  
  uint2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.uint2)
}

// optional int64 int5 = 14;
inline void Complex::clear_int5() {
  int5_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Complex::int5() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int5)
  return int5_;
}
inline void Complex::set_int5(::google::protobuf::int64 value) {
  
  int5_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int5)
}

// optional sint32 int6 = 15;
inline void Complex::clear_int6() {
  int6_ = 0;
}
inline ::google::protobuf::int32 Complex::int6() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int6)
  return int6_;
}
inline void Complex::set_int6(::google::protobuf::int32 value) {
  
  int6_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int6)
}

// optional double float2 = 16;
inline void Complex::clear_float2() {
  float2_ = 0;
}
inline double Complex::float2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.float2)
  return float2_;
}
inline void Complex::set_float2(double value) {
  
  float2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.float2)
}

// optional string text5 = 17;
inline void Complex::clear_text5() {
  text5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Complex::text5() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text5)
  return text5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_text5(const ::std::string& value) {
  
  text5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text5)
}
inline void Complex::set_text5(const char* value) {
  
  text5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text5)
}
inline void Complex::set_text5(const char* value, size_t size) {
  
  text5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text5)
}
inline ::std::string* Complex::mutable_text5() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text5)
  return text5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Complex::release_text5() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text5)
  
  return text5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complex::set_allocated_text5(::std::string* text5) {
  if (text5 != NULL) {
    
  } else {
    
  }
  text5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text5);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text5)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace serialize

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::serialize::ENUMERATION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::serialize::ENUMERATION>() {
  return ::serialize::ENUMERATION_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_serialize_2eproto__INCLUDED
