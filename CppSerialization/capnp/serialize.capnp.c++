// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: serialize.capnp

#include "serialize.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<34> b_bd12a8840057ab5f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     95, 171,  87,   0, 132, 168,  18, 189,
     16,   0,   0,   0,   2,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     69,  78,  85,  77,  69,  82,  65,  84,
     73,  79,  78,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 110, 101,   0,   0,   0,   0,   0,
    116, 119, 111,   0,   0,   0,   0,   0,
    116, 104, 114, 101, 101,   0,   0,   0,
    102, 111, 117, 114,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bd12a8840057ab5f = b_bd12a8840057ab5f.words;
#if !CAPNP_LITE
static const uint16_t m_bd12a8840057ab5f[] = {3, 0, 2, 1};
const ::capnp::_::RawSchema s_bd12a8840057ab5f = {
  0xbd12a8840057ab5f, b_bd12a8840057ab5f.words, 34, nullptr, m_bd12a8840057ab5f,
  0, 4, nullptr, nullptr, nullptr, { &s_bd12a8840057ab5f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ENUMERATION_bd12a8840057ab5f, bd12a8840057ab5f);
static const ::capnp::_::AlignedData<92> b_9dd607458fe93956 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86,  57, 233, 143,  69,   7, 214, 157,
     16,   0,   0,   0,   1,   0,   4,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     73, 110, 116, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  49,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  50,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  51,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  52,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9dd607458fe93956 = b_9dd607458fe93956.words;
#if !CAPNP_LITE
static const uint16_t m_9dd607458fe93956[] = {0, 1, 2, 3, 4};
static const uint16_t i_9dd607458fe93956[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_9dd607458fe93956 = {
  0x9dd607458fe93956, b_9dd607458fe93956.words, 92, nullptr, m_9dd607458fe93956,
  0, 5, i_9dd607458fe93956, nullptr, nullptr, { &s_9dd607458fe93956, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_8cc7cd8f92a2ad2d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45, 173, 162, 146, 143, 205, 199, 140,
     16,   0,   0,   0,   1,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     73, 110, 116,  76, 105, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 116, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     86,  57, 233, 143,  69,   7, 214, 157,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8cc7cd8f92a2ad2d = b_8cc7cd8f92a2ad2d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8cc7cd8f92a2ad2d[] = {
  &s_9dd607458fe93956,
};
static const uint16_t m_8cc7cd8f92a2ad2d[] = {0};
static const uint16_t i_8cc7cd8f92a2ad2d[] = {0};
const ::capnp::_::RawSchema s_8cc7cd8f92a2ad2d = {
  0x8cc7cd8f92a2ad2d, b_8cc7cd8f92a2ad2d.words, 36, d_8cc7cd8f92a2ad2d, m_8cc7cd8f92a2ad2d,
  1, 1, i_8cc7cd8f92a2ad2d, nullptr, nullptr, { &s_8cc7cd8f92a2ad2d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<122> b_ebdb8584e075c955 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85, 201, 117, 224, 132, 133, 219, 235,
     16,   0,   0,   0,   1,   0,   4,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     77, 105, 120, 101, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  49,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  50,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 105, 110, 116,  49,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111,  97, 116,  49,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  49,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 117, 109,  49,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     95, 171,  87,   0, 132, 168,  18, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ebdb8584e075c955 = b_ebdb8584e075c955.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ebdb8584e075c955[] = {
  &s_bd12a8840057ab5f,
};
static const uint16_t m_ebdb8584e075c955[] = {6, 4, 0, 1, 2, 5, 3};
static const uint16_t i_ebdb8584e075c955[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_ebdb8584e075c955 = {
  0xebdb8584e075c955, b_ebdb8584e075c955.words, 122, d_ebdb8584e075c955, m_ebdb8584e075c955,
  1, 7, i_ebdb8584e075c955, nullptr, nullptr, { &s_ebdb8584e075c955, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_d5f923118f304a35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53,  74,  48, 143,  17,  35, 249, 213,
     16,   0,   0,   0,   1,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     77, 105, 120, 101, 100,  76, 105, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 120, 101, 100,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     85, 201, 117, 224, 132, 133, 219, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5f923118f304a35 = b_d5f923118f304a35.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d5f923118f304a35[] = {
  &s_ebdb8584e075c955,
};
static const uint16_t m_d5f923118f304a35[] = {0};
static const uint16_t i_d5f923118f304a35[] = {0};
const ::capnp::_::RawSchema s_d5f923118f304a35 = {
  0xd5f923118f304a35, b_d5f923118f304a35.words, 37, d_d5f923118f304a35, m_d5f923118f304a35,
  1, 1, i_d5f923118f304a35, nullptr, nullptr, { &s_d5f923118f304a35, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<102> b_b50fc5dc2adfa892 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    146, 168, 223,  42, 220, 197,  15, 181,
     16,   0,   0,   0,   1,   0,   2,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 116,  97, 105, 110, 101,
    114,  86, 101,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  49,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  49,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103, 118, 101,
     99,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 118, 101,  99,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b50fc5dc2adfa892 = b_b50fc5dc2adfa892.words;
#if !CAPNP_LITE
static const uint16_t m_b50fc5dc2adfa892[] = {0, 1, 4, 3, 2};
static const uint16_t i_b50fc5dc2adfa892[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_b50fc5dc2adfa892 = {
  0xb50fc5dc2adfa892, b_b50fc5dc2adfa892.words, 102, nullptr, m_b50fc5dc2adfa892,
  0, 5, i_b50fc5dc2adfa892, nullptr, nullptr, { &s_b50fc5dc2adfa892, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_c967c9b682e98ab4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180, 138, 233, 130, 182, 201, 103, 201,
     16,   0,   0,   0,   1,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 116,  97, 105, 110, 101,
    114,  86, 101,  99,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 116, 118, 101,  99,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    146, 168, 223,  42, 220, 197,  15, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c967c9b682e98ab4 = b_c967c9b682e98ab4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c967c9b682e98ab4[] = {
  &s_b50fc5dc2adfa892,
};
static const uint16_t m_c967c9b682e98ab4[] = {0};
static const uint16_t i_c967c9b682e98ab4[] = {0};
const ::capnp::_::RawSchema s_c967c9b682e98ab4 = {
  0xc967c9b682e98ab4, b_c967c9b682e98ab4.words, 38, d_c967c9b682e98ab4, m_c967c9b682e98ab4,
  1, 1, i_c967c9b682e98ab4, nullptr, nullptr, { &s_c967c9b682e98ab4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_f1acf663667b09ab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171,   9, 123, 102,  99, 246, 172, 241,
     16,   0,   0,   0,   1,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  23,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     77,  97, 112,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    198, 251,  21, 244, 233, 169,  11, 134,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    198, 251,  21, 244, 233, 169,  11, 134,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    171,   9, 123, 102,  99, 246, 172, 241,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   1,   0,
      5,   0,   0,   0,  34,   0,   0,   0,
      5,   0,   0,   0,  50,   0,   0,   0,
     75, 101, 121,   0,   0,   0,   0,   0,
     86,  97, 108, 117, 101,   0,   0,   0, }
};
::capnp::word const* const bp_f1acf663667b09ab = b_f1acf663667b09ab.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f1acf663667b09ab[] = {
  &s_860ba9e9f415fbc6,
};
static const uint16_t m_f1acf663667b09ab[] = {0};
static const uint16_t i_f1acf663667b09ab[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_f1acf663667b09ab[] = {
  { 16777216,  ::capnp_bench::Map< ::capnp::AnyPointer,  ::capnp::AnyPointer>::Entry::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_f1acf663667b09ab = {
  0xf1acf663667b09ab, b_f1acf663667b09ab.words, 49, d_f1acf663667b09ab, m_f1acf663667b09ab,
  1, 1, i_f1acf663667b09ab, nullptr, nullptr, { &s_f1acf663667b09ab, nullptr, bd_f1acf663667b09ab, 0, sizeof(bd_f1acf663667b09ab) / sizeof(bd_f1acf663667b09ab[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_860ba9e9f415fbc6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198, 251,  21, 244, 233, 169,  11, 134,
     20,   0,   0,   0,   1,   0,   0,   0,
    171,   9, 123, 102,  99, 246, 172, 241,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     77,  97, 112,  46,  69, 110, 116, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    171,   9, 123, 102,  99, 246, 172, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
    171,   9, 123, 102,  99, 246, 172, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_860ba9e9f415fbc6 = b_860ba9e9f415fbc6.words;
#if !CAPNP_LITE
static const uint16_t m_860ba9e9f415fbc6[] = {0, 1};
static const uint16_t i_860ba9e9f415fbc6[] = {0, 1};
const ::capnp::_::RawSchema s_860ba9e9f415fbc6 = {
  0x860ba9e9f415fbc6, b_860ba9e9f415fbc6.words, 48, nullptr, m_860ba9e9f415fbc6,
  0, 2, i_860ba9e9f415fbc6, nullptr, nullptr, { &s_860ba9e9f415fbc6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_e9b3b4941fbbbae2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    226, 186, 187,  31, 148, 180, 179, 233,
     16,   0,   0,   0,   1,   0,   1,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     73, 110, 116,  75, 101, 121,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e9b3b4941fbbbae2 = b_e9b3b4941fbbbae2.words;
#if !CAPNP_LITE
static const uint16_t m_e9b3b4941fbbbae2[] = {0};
static const uint16_t i_e9b3b4941fbbbae2[] = {0};
const ::capnp::_::RawSchema s_e9b3b4941fbbbae2 = {
  0xe9b3b4941fbbbae2, b_e9b3b4941fbbbae2.words, 32, nullptr, m_e9b3b4941fbbbae2,
  0, 1, i_e9b3b4941fbbbae2, nullptr, nullptr, { &s_e9b3b4941fbbbae2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_e3c9b5a7ecd16e15 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     21, 110, 209, 236, 167, 181, 201, 227,
     16,   0,   0,   0,   1,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     83, 116, 114, 105, 110, 103,  77,  97,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     98, 121,  73, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    171,   9, 123, 102,  99, 246, 172, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    171,   9, 123, 102,  99, 246, 172, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  39,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    226, 186, 187,  31, 148, 180, 179, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3c9b5a7ecd16e15 = b_e3c9b5a7ecd16e15.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e3c9b5a7ecd16e15[] = {
  &s_f1acf663667b09ab,
};
static const uint16_t m_e3c9b5a7ecd16e15[] = {0};
static const uint16_t i_e3c9b5a7ecd16e15[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_e3c9b5a7ecd16e15[] = {
  { 16777216,  ::capnp_bench::Map< ::capnp_bench::IntKey,  ::capnp::Text>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_e3c9b5a7ecd16e15 = {
  0xe3c9b5a7ecd16e15, b_e3c9b5a7ecd16e15.words, 51, d_e3c9b5a7ecd16e15, m_e3c9b5a7ecd16e15,
  1, 1, i_e3c9b5a7ecd16e15, nullptr, nullptr, { &s_e3c9b5a7ecd16e15, nullptr, bd_e3c9b5a7ecd16e15, 0, sizeof(bd_e3c9b5a7ecd16e15) / sizeof(bd_e3c9b5a7ecd16e15[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_b235479c76ffdf42 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     66, 223, 255, 118, 156,  71,  53, 178,
     16,   0,   0,   0,   1,   0,   2,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 116,  97, 105, 110, 101,
    114,  77,  97, 112,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  49,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  49,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 112,  49,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21, 110, 209, 236, 167, 181, 201, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b235479c76ffdf42 = b_b235479c76ffdf42.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b235479c76ffdf42[] = {
  &s_e3c9b5a7ecd16e15,
};
static const uint16_t m_b235479c76ffdf42[] = {0, 1, 3, 2};
static const uint16_t i_b235479c76ffdf42[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b235479c76ffdf42 = {
  0xb235479c76ffdf42, b_b235479c76ffdf42.words, 78, d_b235479c76ffdf42, m_b235479c76ffdf42,
  1, 4, i_b235479c76ffdf42, nullptr, nullptr, { &s_b235479c76ffdf42, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_bea762291acf7e0e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     14, 126, 207,  26,  41,  98, 167, 190,
     16,   0,   0,   0,   1,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 110, 116,  97, 105, 110, 101,
    114,  77,  97, 112,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 110, 116, 109,  97, 112,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     66, 223, 255, 118, 156,  71,  53, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bea762291acf7e0e = b_bea762291acf7e0e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bea762291acf7e0e[] = {
  &s_b235479c76ffdf42,
};
static const uint16_t m_bea762291acf7e0e[] = {0};
static const uint16_t i_bea762291acf7e0e[] = {0};
const ::capnp::_::RawSchema s_bea762291acf7e0e = {
  0xbea762291acf7e0e, b_bea762291acf7e0e.words, 38, d_bea762291acf7e0e, m_bea762291acf7e0e,
  1, 1, i_bea762291acf7e0e, nullptr, nullptr, { &s_bea762291acf7e0e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<272> b_9dafef1309ac2eaf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    175,  46, 172,   9,  19, 239, 175, 157,
     16,   0,   0,   0,   1,   0,   9,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 191,   3,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 109, 112, 108, 101, 120,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     68,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   1,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   3,   0,   1,   0,
    216,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   1,   0,   0,   3,   0,   1,   0,
    220,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   1,   0,   0,   3,   0,   1,   0,
    228,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   1,   0,   0,   3,   0,   1,   0,
    236,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   1,   0,   0,   3,   0,   1,   0,
    240,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   1,   0,   0,   3,   0,   1,   0,
    244,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   1,   0,   0,   3,   0,   1,   0,
    248,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   1,   0,   0,   3,   0,   1,   0,
    252,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   1,   0,   0,   3,   0,   1,   0,
      0,   2,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   1,   0,   0,   3,   0,   1,   0,
      4,   2,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   1,   0,   0,   3,   0,   1,   0,
      8,   2,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   2,   0,   0,   3,   0,   1,   0,
     12,   2,   0,   0,   2,   0,   1,   0,
     15,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   2,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   2,   0,   0,   3,   0,   1,   0,
     16,   2,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   2,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   2,   0,   0,   3,   0,   1,   0,
     20,   2,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  49,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  50,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  51,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  49,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  50,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  51,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  52,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 117, 109,  49,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     95, 171,  87,   0, 132, 168,  18, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111,  97, 116,  49,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  52,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 105, 110, 116,  49,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 105, 110, 116,  50,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  53,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116,  54,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111,  97, 116,  50,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,  53,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9dafef1309ac2eaf = b_9dafef1309ac2eaf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9dafef1309ac2eaf[] = {
  &s_bd12a8840057ab5f,
};
static const uint16_t m_9dafef1309ac2eaf[] = {8, 9, 15, 0, 4, 5, 6, 10, 13, 14, 1, 2, 3, 7, 16, 11, 12};
static const uint16_t i_9dafef1309ac2eaf[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
const ::capnp::_::RawSchema s_9dafef1309ac2eaf = {
  0x9dafef1309ac2eaf, b_9dafef1309ac2eaf.words, 272, d_9dafef1309ac2eaf, m_9dafef1309ac2eaf,
  1, 17, i_9dafef1309ac2eaf, nullptr, nullptr, { &s_9dafef1309ac2eaf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_82fd20ab7646e5cd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    205, 229,  70, 118, 171,  32, 253, 130,
     16,   0,   0,   0,   1,   0,   0,   0,
    249, 253, 120,  47,  84,  56,  95, 201,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 105,  97, 108, 105, 122,
    101,  46,  99,  97, 112, 110, 112,  58,
     67, 111, 109, 112, 108, 101, 120,  76,
    105, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 109, 112, 108, 101, 120,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    175,  46, 172,   9,  19, 239, 175, 157,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82fd20ab7646e5cd = b_82fd20ab7646e5cd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_82fd20ab7646e5cd[] = {
  &s_9dafef1309ac2eaf,
};
static const uint16_t m_82fd20ab7646e5cd[] = {0};
static const uint16_t i_82fd20ab7646e5cd[] = {0};
const ::capnp::_::RawSchema s_82fd20ab7646e5cd = {
  0x82fd20ab7646e5cd, b_82fd20ab7646e5cd.words, 37, d_82fd20ab7646e5cd, m_82fd20ab7646e5cd,
  1, 1, i_82fd20ab7646e5cd, nullptr, nullptr, { &s_82fd20ab7646e5cd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnp_bench {

// Ints
#ifndef _MSC_VER
constexpr uint16_t Ints::_capnpPrivate::dataWordSize;
constexpr uint16_t Ints::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Ints::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Ints::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Ints::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// IntList
#ifndef _MSC_VER
constexpr uint16_t IntList::_capnpPrivate::dataWordSize;
constexpr uint16_t IntList::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind IntList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IntList::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* IntList::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Mixed
#ifndef _MSC_VER
constexpr uint16_t Mixed::_capnpPrivate::dataWordSize;
constexpr uint16_t Mixed::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Mixed::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Mixed::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Mixed::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// MixedList
#ifndef _MSC_VER
constexpr uint16_t MixedList::_capnpPrivate::dataWordSize;
constexpr uint16_t MixedList::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind MixedList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MixedList::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* MixedList::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ContainerVec
#ifndef _MSC_VER
constexpr uint16_t ContainerVec::_capnpPrivate::dataWordSize;
constexpr uint16_t ContainerVec::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ContainerVec::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ContainerVec::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ContainerVec::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ContainerVecList
#ifndef _MSC_VER
constexpr uint16_t ContainerVecList::_capnpPrivate::dataWordSize;
constexpr uint16_t ContainerVecList::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ContainerVecList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ContainerVecList::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ContainerVecList::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// IntKey
#ifndef _MSC_VER
constexpr uint16_t IntKey::_capnpPrivate::dataWordSize;
constexpr uint16_t IntKey::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind IntKey::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IntKey::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* IntKey::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// StringMap
#ifndef _MSC_VER
constexpr uint16_t StringMap::_capnpPrivate::dataWordSize;
constexpr uint16_t StringMap::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind StringMap::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StringMap::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* StringMap::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ContainerMap
#ifndef _MSC_VER
constexpr uint16_t ContainerMap::_capnpPrivate::dataWordSize;
constexpr uint16_t ContainerMap::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ContainerMap::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ContainerMap::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ContainerMap::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ContainerMapList
#ifndef _MSC_VER
constexpr uint16_t ContainerMapList::_capnpPrivate::dataWordSize;
constexpr uint16_t ContainerMapList::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ContainerMapList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ContainerMapList::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ContainerMapList::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Complex
#ifndef _MSC_VER
constexpr uint16_t Complex::_capnpPrivate::dataWordSize;
constexpr uint16_t Complex::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Complex::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Complex::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Complex::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ComplexList
#ifndef _MSC_VER
constexpr uint16_t ComplexList::_capnpPrivate::dataWordSize;
constexpr uint16_t ComplexList::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ComplexList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ComplexList::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ComplexList::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

