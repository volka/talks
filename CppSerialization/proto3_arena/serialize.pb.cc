// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serialize.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "serialize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace serialize {

namespace {

const ::google::protobuf::Descriptor* Ints_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ints_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mixed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mixed_reflection_ = NULL;
const ::google::protobuf::Descriptor* Container_Vec_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Container_Vec_reflection_ = NULL;
const ::google::protobuf::Descriptor* Container_Map_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Container_Map_reflection_ = NULL;
const ::google::protobuf::Descriptor* Container_Map_Map1Entry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Complex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Complex_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUMERATION_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_serialize_2eproto() {
  protobuf_AddDesc_serialize_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "serialize.proto");
  GOOGLE_CHECK(file != NULL);
  Ints_descriptor_ = file->message_type(0);
  static const int Ints_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints, int1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints, int2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints, int3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints, int4_),
  };
  Ints_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Ints_descriptor_,
      Ints::default_instance_,
      Ints_offsets_,
      -1,
      -1,
      -1,
      sizeof(Ints),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ints, _is_default_instance_));
  Mixed_descriptor_ = file->message_type(1);
  static const int Mixed_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, int1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, int2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, uint1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, float1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, text1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, enum1_),
  };
  Mixed_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Mixed_descriptor_,
      Mixed::default_instance_,
      Mixed_offsets_,
      -1,
      -1,
      -1,
      sizeof(Mixed),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mixed, _is_default_instance_));
  Container_Vec_descriptor_ = file->message_type(2);
  static const int Container_Vec_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Vec, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Vec, int1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Vec, text1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Vec, stringvec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Vec, intvec_),
  };
  Container_Vec_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Container_Vec_descriptor_,
      Container_Vec::default_instance_,
      Container_Vec_offsets_,
      -1,
      -1,
      -1,
      sizeof(Container_Vec),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Vec, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Vec, _is_default_instance_));
  Container_Map_descriptor_ = file->message_type(3);
  static const int Container_Map_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Map, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Map, int1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Map, text1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Map, map1_),
  };
  Container_Map_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Container_Map_descriptor_,
      Container_Map::default_instance_,
      Container_Map_offsets_,
      -1,
      -1,
      -1,
      sizeof(Container_Map),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Map, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container_Map, _is_default_instance_));
  Container_Map_Map1Entry_descriptor_ = Container_Map_descriptor_->nested_type(0);
  Complex_descriptor_ = file->message_type(4);
  static const int Complex_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, text1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, text2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, text3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, int1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, int2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, int3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, text4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, enum1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, float1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, int4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, uint1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, uint2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, int5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, int6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, float2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, text5_),
  };
  Complex_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Complex_descriptor_,
      Complex::default_instance_,
      Complex_offsets_,
      -1,
      -1,
      -1,
      sizeof(Complex),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complex, _is_default_instance_));
  ENUMERATION_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_serialize_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Ints_descriptor_, &Ints::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Mixed_descriptor_, &Mixed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Container_Vec_descriptor_, &Container_Vec::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Container_Map_descriptor_, &Container_Map::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Container_Map_Map1Entry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                Container_Map_Map1Entry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Complex_descriptor_, &Complex::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_serialize_2eproto() {
  delete Ints::default_instance_;
  delete Ints_reflection_;
  delete Mixed::default_instance_;
  delete Mixed_reflection_;
  delete Container_Vec::default_instance_;
  delete Container_Vec_reflection_;
  delete Container_Map::default_instance_;
  delete Container_Map_reflection_;
  delete Complex::default_instance_;
  delete Complex_reflection_;
}

void protobuf_AddDesc_serialize_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017serialize.proto\022\tserialize\"J\n\004Ints\022\n\n\002"
    "id\030\001 \001(\003\022\014\n\004int1\030\002 \001(\003\022\014\n\004int2\030\003 \001(\003\022\014\n\004"
    "int3\030\004 \001(\005\022\014\n\004int4\030\005 \001(\005\"\204\001\n\005Mixed\022\n\n\002id"
    "\030\001 \001(\005\022\014\n\004int1\030\002 \001(\005\022\014\n\004int2\030\003 \001(\003\022\r\n\005ui"
    "nt1\030\004 \001(\r\022\016\n\006float1\030\005 \001(\001\022\r\n\005text1\030\006 \001(\t"
    "\022%\n\005enum1\030\007 \001(\0162\026.serialize.ENUMERATION\""
    "[\n\rContainer_Vec\022\n\n\002id\030\001 \001(\005\022\014\n\004int1\030\002 \001"
    "(\003\022\r\n\005text1\030\003 \001(\t\022\021\n\tstringvec\030\004 \003(\t\022\016\n\006"
    "intvec\030\005 \003(\003\"\227\001\n\rContainer_Map\022\n\n\002id\030\001 \001"
    "(\005\022\014\n\004int1\030\002 \001(\003\022\r\n\005text1\030\003 \001(\t\0220\n\004map1\030"
    "\004 \003(\0132\".serialize.Container_Map.Map1Entr"
    "y\032+\n\tMap1Entry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001"
    "(\t:\0028\001\"\231\002\n\007Complex\022\n\n\002id\030\001 \001(\003\022\r\n\005text1\030"
    "\002 \001(\t\022\r\n\005text2\030\003 \001(\t\022\r\n\005text3\030\004 \001(\t\022\014\n\004i"
    "nt1\030\005 \001(\005\022\014\n\004int2\030\006 \001(\005\022\014\n\004int3\030\007 \001(\005\022\r\n"
    "\005text4\030\010 \001(\t\022%\n\005enum1\030\t \001(\0162\026.serialize."
    "ENUMERATION\022\016\n\006float1\030\n \001(\001\022\014\n\004int4\030\013 \001("
    "\003\022\r\n\005uint1\030\014 \001(\r\022\r\n\005uint2\030\r \001(\004\022\014\n\004int5\030"
    "\016 \001(\003\022\014\n\004int6\030\017 \001(\005\022\016\n\006float2\030\020 \001(\001\022\r\n\005t"
    "ext5\030\021 \001(\t*4\n\013ENUMERATION\022\007\n\003ONE\020\000\022\007\n\003TW"
    "O\020\001\022\t\n\005THREE\020\002\022\010\n\004FOUR\020\003b\006proto3", 832);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "serialize.proto", &protobuf_RegisterTypes);
  Ints::default_instance_ = new Ints();
  Mixed::default_instance_ = new Mixed();
  Container_Vec::default_instance_ = new Container_Vec();
  Container_Map::default_instance_ = new Container_Map();
  Complex::default_instance_ = new Complex();
  Ints::default_instance_->InitAsDefaultInstance();
  Mixed::default_instance_->InitAsDefaultInstance();
  Container_Vec::default_instance_->InitAsDefaultInstance();
  Container_Map::default_instance_->InitAsDefaultInstance();
  Complex::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_serialize_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_serialize_2eproto {
  StaticDescriptorInitializer_serialize_2eproto() {
    protobuf_AddDesc_serialize_2eproto();
  }
} static_descriptor_initializer_serialize_2eproto_;
const ::google::protobuf::EnumDescriptor* ENUMERATION_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUMERATION_descriptor_;
}
bool ENUMERATION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ints::kIdFieldNumber;
const int Ints::kInt1FieldNumber;
const int Ints::kInt2FieldNumber;
const int Ints::kInt3FieldNumber;
const int Ints::kInt4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ints::Ints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:serialize.Ints)
}

void Ints::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Ints::Ints(const Ints& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:serialize.Ints)
}

void Ints::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  int1_ = GOOGLE_LONGLONG(0);
  int2_ = GOOGLE_LONGLONG(0);
  int3_ = 0;
  int4_ = 0;
}

Ints::~Ints() {
  // @@protoc_insertion_point(destructor:serialize.Ints)
  SharedDtor();
}

void Ints::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Ints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ints::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Ints_descriptor_;
}

const Ints& Ints::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_serialize_2eproto();
  return *default_instance_;
}

Ints* Ints::default_instance_ = NULL;

Ints* Ints::New(::google::protobuf::Arena* arena) const {
  Ints* n = new Ints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ints::Clear() {
// @@protoc_insertion_point(message_clear_start:serialize.Ints)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Ints, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Ints*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, int4_);

#undef ZR_HELPER_
#undef ZR_

}

bool Ints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:serialize.Ints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int1;
        break;
      }

      // optional int64 int1 = 2;
      case 2: {
        if (tag == 16) {
         parse_int1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_int2;
        break;
      }

      // optional int64 int2 = 3;
      case 3: {
        if (tag == 24) {
         parse_int2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_int3;
        break;
      }

      // optional int32 int3 = 4;
      case 4: {
        if (tag == 32) {
         parse_int3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_int4;
        break;
      }

      // optional int32 int4 = 5;
      case 5: {
        if (tag == 40) {
         parse_int4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:serialize.Ints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:serialize.Ints)
  return false;
#undef DO_
}

void Ints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:serialize.Ints)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int1(), output);
  }

  // optional int64 int2 = 3;
  if (this->int2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int2(), output);
  }

  // optional int32 int3 = 4;
  if (this->int3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->int3(), output);
  }

  // optional int32 int4 = 5;
  if (this->int4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->int4(), output);
  }

  // @@protoc_insertion_point(serialize_end:serialize.Ints)
}

::google::protobuf::uint8* Ints::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:serialize.Ints)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int1(), target);
  }

  // optional int64 int2 = 3;
  if (this->int2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int2(), target);
  }

  // optional int32 int3 = 4;
  if (this->int3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->int3(), target);
  }

  // optional int32 int4 = 5;
  if (this->int4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->int4(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:serialize.Ints)
  return target;
}

int Ints::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:serialize.Ints)
  int total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int1());
  }

  // optional int64 int2 = 3;
  if (this->int2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int2());
  }

  // optional int32 int3 = 4;
  if (this->int3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int3());
  }

  // optional int32 int4 = 5;
  if (this->int4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int4());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:serialize.Ints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Ints* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Ints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:serialize.Ints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:serialize.Ints)
    MergeFrom(*source);
  }
}

void Ints::MergeFrom(const Ints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:serialize.Ints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.int1() != 0) {
    set_int1(from.int1());
  }
  if (from.int2() != 0) {
    set_int2(from.int2());
  }
  if (from.int3() != 0) {
    set_int3(from.int3());
  }
  if (from.int4() != 0) {
    set_int4(from.int4());
  }
}

void Ints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:serialize.Ints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ints::CopyFrom(const Ints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:serialize.Ints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ints::IsInitialized() const {

  return true;
}

void Ints::Swap(Ints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ints::InternalSwap(Ints* other) {
  std::swap(id_, other->id_);
  std::swap(int1_, other->int1_);
  std::swap(int2_, other->int2_);
  std::swap(int3_, other->int3_);
  std::swap(int4_, other->int4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ints::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Ints_descriptor_;
  metadata.reflection = Ints_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ints

// optional int64 id = 1;
void Ints::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Ints::id() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.id)
  return id_;
}
 void Ints::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.id)
}

// optional int64 int1 = 2;
void Ints::clear_int1() {
  int1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Ints::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int1)
  return int1_;
}
 void Ints::set_int1(::google::protobuf::int64 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int1)
}

// optional int64 int2 = 3;
void Ints::clear_int2() {
  int2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Ints::int2() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int2)
  return int2_;
}
 void Ints::set_int2(::google::protobuf::int64 value) {
  
  int2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int2)
}

// optional int32 int3 = 4;
void Ints::clear_int3() {
  int3_ = 0;
}
 ::google::protobuf::int32 Ints::int3() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int3)
  return int3_;
}
 void Ints::set_int3(::google::protobuf::int32 value) {
  
  int3_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int3)
}

// optional int32 int4 = 5;
void Ints::clear_int4() {
  int4_ = 0;
}
 ::google::protobuf::int32 Ints::int4() const {
  // @@protoc_insertion_point(field_get:serialize.Ints.int4)
  return int4_;
}
 void Ints::set_int4(::google::protobuf::int32 value) {
  
  int4_ = value;
  // @@protoc_insertion_point(field_set:serialize.Ints.int4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mixed::kIdFieldNumber;
const int Mixed::kInt1FieldNumber;
const int Mixed::kInt2FieldNumber;
const int Mixed::kUint1FieldNumber;
const int Mixed::kFloat1FieldNumber;
const int Mixed::kText1FieldNumber;
const int Mixed::kEnum1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mixed::Mixed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:serialize.Mixed)
}

void Mixed::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Mixed::Mixed(const Mixed& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:serialize.Mixed)
}

void Mixed::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  int1_ = 0;
  int2_ = GOOGLE_LONGLONG(0);
  uint1_ = 0u;
  float1_ = 0;
  text1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enum1_ = 0;
}

Mixed::~Mixed() {
  // @@protoc_insertion_point(destructor:serialize.Mixed)
  SharedDtor();
}

void Mixed::SharedDtor() {
  text1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Mixed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mixed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mixed_descriptor_;
}

const Mixed& Mixed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_serialize_2eproto();
  return *default_instance_;
}

Mixed* Mixed::default_instance_ = NULL;

Mixed* Mixed::New(::google::protobuf::Arena* arena) const {
  Mixed* n = new Mixed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mixed::Clear() {
// @@protoc_insertion_point(message_clear_start:serialize.Mixed)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Mixed, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Mixed*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, enum1_);
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Mixed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:serialize.Mixed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int1;
        break;
      }

      // optional int32 int1 = 2;
      case 2: {
        if (tag == 16) {
         parse_int1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_int2;
        break;
      }

      // optional int64 int2 = 3;
      case 3: {
        if (tag == 24) {
         parse_int2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uint1;
        break;
      }

      // optional uint32 uint1 = 4;
      case 4: {
        if (tag == 32) {
         parse_uint1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_float1;
        break;
      }

      // optional double float1 = 5;
      case 5: {
        if (tag == 41) {
         parse_float1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &float1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_text1;
        break;
      }

      // optional string text1 = 6;
      case 6: {
        if (tag == 50) {
         parse_text1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text1().data(), this->text1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Mixed.text1"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_enum1;
        break;
      }

      // optional .serialize.ENUMERATION enum1 = 7;
      case 7: {
        if (tag == 56) {
         parse_enum1:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum1(static_cast< ::serialize::ENUMERATION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:serialize.Mixed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:serialize.Mixed)
  return false;
#undef DO_
}

void Mixed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:serialize.Mixed)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 int1 = 2;
  if (this->int1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int1(), output);
  }

  // optional int64 int2 = 3;
  if (this->int2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int2(), output);
  }

  // optional uint32 uint1 = 4;
  if (this->uint1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uint1(), output);
  }

  // optional double float1 = 5;
  if (this->float1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->float1(), output);
  }

  // optional string text1 = 6;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Mixed.text1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->text1(), output);
  }

  // optional .serialize.ENUMERATION enum1 = 7;
  if (this->enum1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->enum1(), output);
  }

  // @@protoc_insertion_point(serialize_end:serialize.Mixed)
}

::google::protobuf::uint8* Mixed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:serialize.Mixed)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 int1 = 2;
  if (this->int1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int1(), target);
  }

  // optional int64 int2 = 3;
  if (this->int2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int2(), target);
  }

  // optional uint32 uint1 = 4;
  if (this->uint1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uint1(), target);
  }

  // optional double float1 = 5;
  if (this->float1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->float1(), target);
  }

  // optional string text1 = 6;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Mixed.text1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->text1(), target);
  }

  // optional .serialize.ENUMERATION enum1 = 7;
  if (this->enum1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->enum1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:serialize.Mixed)
  return target;
}

int Mixed::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:serialize.Mixed)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 int1 = 2;
  if (this->int1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int1());
  }

  // optional int64 int2 = 3;
  if (this->int2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int2());
  }

  // optional uint32 uint1 = 4;
  if (this->uint1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uint1());
  }

  // optional double float1 = 5;
  if (this->float1() != 0) {
    total_size += 1 + 8;
  }

  // optional string text1 = 6;
  if (this->text1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text1());
  }

  // optional .serialize.ENUMERATION enum1 = 7;
  if (this->enum1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mixed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:serialize.Mixed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Mixed* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Mixed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:serialize.Mixed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:serialize.Mixed)
    MergeFrom(*source);
  }
}

void Mixed::MergeFrom(const Mixed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:serialize.Mixed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.int1() != 0) {
    set_int1(from.int1());
  }
  if (from.int2() != 0) {
    set_int2(from.int2());
  }
  if (from.uint1() != 0) {
    set_uint1(from.uint1());
  }
  if (from.float1() != 0) {
    set_float1(from.float1());
  }
  if (from.text1().size() > 0) {

    text1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text1_);
  }
  if (from.enum1() != 0) {
    set_enum1(from.enum1());
  }
}

void Mixed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:serialize.Mixed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mixed::CopyFrom(const Mixed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:serialize.Mixed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mixed::IsInitialized() const {

  return true;
}

void Mixed::Swap(Mixed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mixed::InternalSwap(Mixed* other) {
  std::swap(id_, other->id_);
  std::swap(int1_, other->int1_);
  std::swap(int2_, other->int2_);
  std::swap(uint1_, other->uint1_);
  std::swap(float1_, other->float1_);
  text1_.Swap(&other->text1_);
  std::swap(enum1_, other->enum1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mixed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mixed_descriptor_;
  metadata.reflection = Mixed_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Mixed

// optional int32 id = 1;
void Mixed::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Mixed::id() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.id)
  return id_;
}
 void Mixed::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.id)
}

// optional int32 int1 = 2;
void Mixed::clear_int1() {
  int1_ = 0;
}
 ::google::protobuf::int32 Mixed::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.int1)
  return int1_;
}
 void Mixed::set_int1(::google::protobuf::int32 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.int1)
}

// optional int64 int2 = 3;
void Mixed::clear_int2() {
  int2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Mixed::int2() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.int2)
  return int2_;
}
 void Mixed::set_int2(::google::protobuf::int64 value) {
  
  int2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.int2)
}

// optional uint32 uint1 = 4;
void Mixed::clear_uint1() {
  uint1_ = 0u;
}
 ::google::protobuf::uint32 Mixed::uint1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.uint1)
  return uint1_;
}
 void Mixed::set_uint1(::google::protobuf::uint32 value) {
  
  uint1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.uint1)
}

// optional double float1 = 5;
void Mixed::clear_float1() {
  float1_ = 0;
}
 double Mixed::float1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.float1)
  return float1_;
}
 void Mixed::set_float1(double value) {
  
  float1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.float1)
}

// optional string text1 = 6;
void Mixed::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Mixed::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mixed::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Mixed.text1)
}
 void Mixed::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Mixed.text1)
}
 void Mixed::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Mixed.text1)
}
 ::std::string* Mixed::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Mixed.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Mixed::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Mixed.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mixed::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Mixed.text1)
}

// optional .serialize.ENUMERATION enum1 = 7;
void Mixed::clear_enum1() {
  enum1_ = 0;
}
 ::serialize::ENUMERATION Mixed::enum1() const {
  // @@protoc_insertion_point(field_get:serialize.Mixed.enum1)
  return static_cast< ::serialize::ENUMERATION >(enum1_);
}
 void Mixed::set_enum1(::serialize::ENUMERATION value) {
  
  enum1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Mixed.enum1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Container_Vec::kIdFieldNumber;
const int Container_Vec::kInt1FieldNumber;
const int Container_Vec::kText1FieldNumber;
const int Container_Vec::kStringvecFieldNumber;
const int Container_Vec::kIntvecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Container_Vec::Container_Vec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:serialize.Container_Vec)
}

void Container_Vec::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Container_Vec::Container_Vec(const Container_Vec& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:serialize.Container_Vec)
}

void Container_Vec::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  int1_ = GOOGLE_LONGLONG(0);
  text1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Container_Vec::~Container_Vec() {
  // @@protoc_insertion_point(destructor:serialize.Container_Vec)
  SharedDtor();
}

void Container_Vec::SharedDtor() {
  text1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Container_Vec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Container_Vec::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Container_Vec_descriptor_;
}

const Container_Vec& Container_Vec::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_serialize_2eproto();
  return *default_instance_;
}

Container_Vec* Container_Vec::default_instance_ = NULL;

Container_Vec* Container_Vec::New(::google::protobuf::Arena* arena) const {
  Container_Vec* n = new Container_Vec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Container_Vec::Clear() {
// @@protoc_insertion_point(message_clear_start:serialize.Container_Vec)
  id_ = 0;
  int1_ = GOOGLE_LONGLONG(0);
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stringvec_.Clear();
  intvec_.Clear();
}

bool Container_Vec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:serialize.Container_Vec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int1;
        break;
      }

      // optional int64 int1 = 2;
      case 2: {
        if (tag == 16) {
         parse_int1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_text1;
        break;
      }

      // optional string text1 = 3;
      case 3: {
        if (tag == 26) {
         parse_text1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text1().data(), this->text1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Container_Vec.text1"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stringvec;
        break;
      }

      // repeated string stringvec = 4;
      case 4: {
        if (tag == 34) {
         parse_stringvec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stringvec()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringvec(this->stringvec_size() - 1).data(),
            this->stringvec(this->stringvec_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Container_Vec.stringvec"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stringvec;
        if (input->ExpectTag(42)) goto parse_intvec;
        break;
      }

      // repeated int64 intvec = 5;
      case 5: {
        if (tag == 42) {
         parse_intvec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_intvec())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42, input, this->mutable_intvec())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:serialize.Container_Vec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:serialize.Container_Vec)
  return false;
#undef DO_
}

void Container_Vec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:serialize.Container_Vec)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int1(), output);
  }

  // optional string text1 = 3;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Container_Vec.text1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text1(), output);
  }

  // repeated string stringvec = 4;
  for (int i = 0; i < this->stringvec_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringvec(i).data(), this->stringvec(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Container_Vec.stringvec");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->stringvec(i), output);
  }

  // repeated int64 intvec = 5;
  if (this->intvec_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_intvec_cached_byte_size_);
  }
  for (int i = 0; i < this->intvec_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->intvec(i), output);
  }

  // @@protoc_insertion_point(serialize_end:serialize.Container_Vec)
}

::google::protobuf::uint8* Container_Vec::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:serialize.Container_Vec)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int1(), target);
  }

  // optional string text1 = 3;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Container_Vec.text1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text1(), target);
  }

  // repeated string stringvec = 4;
  for (int i = 0; i < this->stringvec_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringvec(i).data(), this->stringvec(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Container_Vec.stringvec");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->stringvec(i), target);
  }

  // repeated int64 intvec = 5;
  if (this->intvec_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _intvec_cached_byte_size_, target);
  }
  for (int i = 0; i < this->intvec_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->intvec(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:serialize.Container_Vec)
  return target;
}

int Container_Vec::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:serialize.Container_Vec)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int1());
  }

  // optional string text1 = 3;
  if (this->text1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text1());
  }

  // repeated string stringvec = 4;
  total_size += 1 * this->stringvec_size();
  for (int i = 0; i < this->stringvec_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stringvec(i));
  }

  // repeated int64 intvec = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->intvec_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->intvec(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _intvec_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Container_Vec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:serialize.Container_Vec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Container_Vec* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Container_Vec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:serialize.Container_Vec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:serialize.Container_Vec)
    MergeFrom(*source);
  }
}

void Container_Vec::MergeFrom(const Container_Vec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:serialize.Container_Vec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  stringvec_.MergeFrom(from.stringvec_);
  intvec_.MergeFrom(from.intvec_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.int1() != 0) {
    set_int1(from.int1());
  }
  if (from.text1().size() > 0) {

    text1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text1_);
  }
}

void Container_Vec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:serialize.Container_Vec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Container_Vec::CopyFrom(const Container_Vec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:serialize.Container_Vec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Container_Vec::IsInitialized() const {

  return true;
}

void Container_Vec::Swap(Container_Vec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Container_Vec::InternalSwap(Container_Vec* other) {
  std::swap(id_, other->id_);
  std::swap(int1_, other->int1_);
  text1_.Swap(&other->text1_);
  stringvec_.UnsafeArenaSwap(&other->stringvec_);
  intvec_.UnsafeArenaSwap(&other->intvec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Container_Vec::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Container_Vec_descriptor_;
  metadata.reflection = Container_Vec_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Container_Vec

// optional int32 id = 1;
void Container_Vec::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Container_Vec::id() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.id)
  return id_;
}
 void Container_Vec::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.id)
}

// optional int64 int1 = 2;
void Container_Vec::clear_int1() {
  int1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Container_Vec::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.int1)
  return int1_;
}
 void Container_Vec::set_int1(::google::protobuf::int64 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.int1)
}

// optional string text1 = 3;
void Container_Vec::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Container_Vec::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Container_Vec::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.text1)
}
 void Container_Vec::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Container_Vec.text1)
}
 void Container_Vec::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Container_Vec.text1)
}
 ::std::string* Container_Vec::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Container_Vec.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Container_Vec::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Container_Vec.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Container_Vec::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Container_Vec.text1)
}

// repeated string stringvec = 4;
int Container_Vec::stringvec_size() const {
  return stringvec_.size();
}
void Container_Vec::clear_stringvec() {
  stringvec_.Clear();
}
 const ::std::string& Container_Vec::stringvec(int index) const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.stringvec)
  return stringvec_.Get(index);
}
 ::std::string* Container_Vec::mutable_stringvec(int index) {
  // @@protoc_insertion_point(field_mutable:serialize.Container_Vec.stringvec)
  return stringvec_.Mutable(index);
}
 void Container_Vec::set_stringvec(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.stringvec)
  stringvec_.Mutable(index)->assign(value);
}
 void Container_Vec::set_stringvec(int index, const char* value) {
  stringvec_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:serialize.Container_Vec.stringvec)
}
 void Container_Vec::set_stringvec(int index, const char* value, size_t size) {
  stringvec_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:serialize.Container_Vec.stringvec)
}
 ::std::string* Container_Vec::add_stringvec() {
  // @@protoc_insertion_point(field_add_mutable:serialize.Container_Vec.stringvec)
  return stringvec_.Add();
}
 void Container_Vec::add_stringvec(const ::std::string& value) {
  stringvec_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:serialize.Container_Vec.stringvec)
}
 void Container_Vec::add_stringvec(const char* value) {
  stringvec_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:serialize.Container_Vec.stringvec)
}
 void Container_Vec::add_stringvec(const char* value, size_t size) {
  stringvec_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:serialize.Container_Vec.stringvec)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Container_Vec::stringvec() const {
  // @@protoc_insertion_point(field_list:serialize.Container_Vec.stringvec)
  return stringvec_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Container_Vec::mutable_stringvec() {
  // @@protoc_insertion_point(field_mutable_list:serialize.Container_Vec.stringvec)
  return &stringvec_;
}

// repeated int64 intvec = 5;
int Container_Vec::intvec_size() const {
  return intvec_.size();
}
void Container_Vec::clear_intvec() {
  intvec_.Clear();
}
 ::google::protobuf::int64 Container_Vec::intvec(int index) const {
  // @@protoc_insertion_point(field_get:serialize.Container_Vec.intvec)
  return intvec_.Get(index);
}
 void Container_Vec::set_intvec(int index, ::google::protobuf::int64 value) {
  intvec_.Set(index, value);
  // @@protoc_insertion_point(field_set:serialize.Container_Vec.intvec)
}
 void Container_Vec::add_intvec(::google::protobuf::int64 value) {
  intvec_.Add(value);
  // @@protoc_insertion_point(field_add:serialize.Container_Vec.intvec)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Container_Vec::intvec() const {
  // @@protoc_insertion_point(field_list:serialize.Container_Vec.intvec)
  return intvec_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Container_Vec::mutable_intvec() {
  // @@protoc_insertion_point(field_mutable_list:serialize.Container_Vec.intvec)
  return &intvec_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Container_Map::kIdFieldNumber;
const int Container_Map::kInt1FieldNumber;
const int Container_Map::kText1FieldNumber;
const int Container_Map::kMap1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Container_Map::Container_Map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:serialize.Container_Map)
}

void Container_Map::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Container_Map::Container_Map(const Container_Map& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:serialize.Container_Map)
}

void Container_Map::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  int1_ = GOOGLE_LONGLONG(0);
  text1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map1_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  map1_.SetEntryDescriptor(
      &::serialize::Container_Map_Map1Entry_descriptor_);
}

Container_Map::~Container_Map() {
  // @@protoc_insertion_point(destructor:serialize.Container_Map)
  SharedDtor();
}

void Container_Map::SharedDtor() {
  text1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Container_Map::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Container_Map::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Container_Map_descriptor_;
}

const Container_Map& Container_Map::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_serialize_2eproto();
  return *default_instance_;
}

Container_Map* Container_Map::default_instance_ = NULL;

Container_Map* Container_Map::New(::google::protobuf::Arena* arena) const {
  Container_Map* n = new Container_Map;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Container_Map::Clear() {
// @@protoc_insertion_point(message_clear_start:serialize.Container_Map)
  id_ = 0;
  int1_ = GOOGLE_LONGLONG(0);
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map1_.Clear();
}

bool Container_Map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:serialize.Container_Map)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int1;
        break;
      }

      // optional int64 int1 = 2;
      case 2: {
        if (tag == 16) {
         parse_int1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_text1;
        break;
      }

      // optional string text1 = 3;
      case 3: {
        if (tag == 26) {
         parse_text1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text1().data(), this->text1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Container_Map.text1"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_map1;
        break;
      }

      // map<int32, string> map1 = 4;
      case 4: {
        if (tag == 34) {
         parse_map1:
          DO_(input->IncrementRecursionDepth());
         parse_loop_map1:
          ::google::protobuf::scoped_ptr<Container_Map_Map1Entry> entry(map1_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_map1())[entry->key()] = *entry->mutable_value();
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry->mutable_value()->data(),
            entry->mutable_value()->length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Container_Map.Map1Entry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_map1;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:serialize.Container_Map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:serialize.Container_Map)
  return false;
#undef DO_
}

void Container_Map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:serialize.Container_Map)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int1(), output);
  }

  // optional string text1 = 3;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Container_Map.text1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text1(), output);
  }

  // map<int32, string> map1 = 4;
  {
    ::google::protobuf::scoped_ptr<Container_Map_Map1Entry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->map1().begin();
        it != this->map1().end(); ++it) {
      entry.reset(map1_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
          4, *entry, output);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "serialize.Container_Map.Map1Entry.value");
    }
  }

  // @@protoc_insertion_point(serialize_end:serialize.Container_Map)
}

::google::protobuf::uint8* Container_Map::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:serialize.Container_Map)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int1(), target);
  }

  // optional string text1 = 3;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Container_Map.text1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text1(), target);
  }

  // map<int32, string> map1 = 4;
  {
    ::google::protobuf::scoped_ptr<Container_Map_Map1Entry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->map1().begin();
        it != this->map1().end(); ++it) {
      entry.reset(map1_.NewEntryWrapper(it->first, it->second));
      target = ::google::protobuf::internal::WireFormatLite::
          WriteMessageNoVirtualToArray(
              4, *entry, target);
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        it->second.data(), it->second.length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "serialize.Container_Map.Map1Entry.value");
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:serialize.Container_Map)
  return target;
}

int Container_Map::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:serialize.Container_Map)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int64 int1 = 2;
  if (this->int1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int1());
  }

  // optional string text1 = 3;
  if (this->text1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text1());
  }

  // map<int32, string> map1 = 4;
  total_size += 1 * this->map1_size();
  {
    ::google::protobuf::scoped_ptr<Container_Map_Map1Entry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->map1().begin();
        it != this->map1().end(); ++it) {
      entry.reset(map1_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Container_Map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:serialize.Container_Map)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Container_Map* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Container_Map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:serialize.Container_Map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:serialize.Container_Map)
    MergeFrom(*source);
  }
}

void Container_Map::MergeFrom(const Container_Map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:serialize.Container_Map)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  map1_.MergeFrom(from.map1_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.int1() != 0) {
    set_int1(from.int1());
  }
  if (from.text1().size() > 0) {

    text1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text1_);
  }
}

void Container_Map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:serialize.Container_Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Container_Map::CopyFrom(const Container_Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:serialize.Container_Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Container_Map::IsInitialized() const {

  return true;
}

void Container_Map::Swap(Container_Map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Container_Map::InternalSwap(Container_Map* other) {
  std::swap(id_, other->id_);
  std::swap(int1_, other->int1_);
  text1_.Swap(&other->text1_);
  map1_.Swap(&other->map1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Container_Map::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Container_Map_descriptor_;
  metadata.reflection = Container_Map_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Container_Map

// optional int32 id = 1;
void Container_Map::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Container_Map::id() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Map.id)
  return id_;
}
 void Container_Map::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Map.id)
}

// optional int64 int1 = 2;
void Container_Map::clear_int1() {
  int1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Container_Map::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Map.int1)
  return int1_;
}
 void Container_Map::set_int1(::google::protobuf::int64 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Container_Map.int1)
}

// optional string text1 = 3;
void Container_Map::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Container_Map::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Container_Map.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Container_Map::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Container_Map.text1)
}
 void Container_Map::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Container_Map.text1)
}
 void Container_Map::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Container_Map.text1)
}
 ::std::string* Container_Map::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Container_Map.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Container_Map::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Container_Map.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Container_Map::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Container_Map.text1)
}

// map<int32, string> map1 = 4;
int Container_Map::map1_size() const {
  return map1_.size();
}
void Container_Map::clear_map1() {
  map1_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
Container_Map::map1() const {
  // @@protoc_insertion_point(field_map:serialize.Container_Map.map1)
  return map1_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
Container_Map::mutable_map1() {
  // @@protoc_insertion_point(field_mutable_map:serialize.Container_Map.map1)
  return map1_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Complex::kIdFieldNumber;
const int Complex::kText1FieldNumber;
const int Complex::kText2FieldNumber;
const int Complex::kText3FieldNumber;
const int Complex::kInt1FieldNumber;
const int Complex::kInt2FieldNumber;
const int Complex::kInt3FieldNumber;
const int Complex::kText4FieldNumber;
const int Complex::kEnum1FieldNumber;
const int Complex::kFloat1FieldNumber;
const int Complex::kInt4FieldNumber;
const int Complex::kUint1FieldNumber;
const int Complex::kUint2FieldNumber;
const int Complex::kInt5FieldNumber;
const int Complex::kInt6FieldNumber;
const int Complex::kFloat2FieldNumber;
const int Complex::kText5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Complex::Complex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:serialize.Complex)
}

void Complex::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Complex::Complex(const Complex& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:serialize.Complex)
}

void Complex::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  text1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int1_ = 0;
  int2_ = 0;
  int3_ = 0;
  text4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enum1_ = 0;
  float1_ = 0;
  int4_ = GOOGLE_LONGLONG(0);
  uint1_ = 0u;
  uint2_ = GOOGLE_ULONGLONG(0);
  int5_ = GOOGLE_LONGLONG(0);
  int6_ = 0;
  float2_ = 0;
  text5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Complex::~Complex() {
  // @@protoc_insertion_point(destructor:serialize.Complex)
  SharedDtor();
}

void Complex::SharedDtor() {
  text1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Complex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Complex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Complex_descriptor_;
}

const Complex& Complex::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_serialize_2eproto();
  return *default_instance_;
}

Complex* Complex::default_instance_ = NULL;

Complex* Complex::New(::google::protobuf::Arena* arena) const {
  Complex* n = new Complex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Complex::Clear() {
// @@protoc_insertion_point(message_clear_start:serialize.Complex)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Complex, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Complex*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(int1_, int2_);
  id_ = GOOGLE_LONGLONG(0);
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int3_ = 0;
  text4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(enum1_, float2_);
  text5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Complex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:serialize.Complex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text1;
        break;
      }

      // optional string text1 = 2;
      case 2: {
        if (tag == 18) {
         parse_text1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text1().data(), this->text1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Complex.text1"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_text2;
        break;
      }

      // optional string text2 = 3;
      case 3: {
        if (tag == 26) {
         parse_text2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text2().data(), this->text2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Complex.text2"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_text3;
        break;
      }

      // optional string text3 = 4;
      case 4: {
        if (tag == 34) {
         parse_text3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text3().data(), this->text3().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Complex.text3"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_int1;
        break;
      }

      // optional int32 int1 = 5;
      case 5: {
        if (tag == 40) {
         parse_int1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_int2;
        break;
      }

      // optional int32 int2 = 6;
      case 6: {
        if (tag == 48) {
         parse_int2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_int3;
        break;
      }

      // optional int32 int3 = 7;
      case 7: {
        if (tag == 56) {
         parse_int3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_text4;
        break;
      }

      // optional string text4 = 8;
      case 8: {
        if (tag == 66) {
         parse_text4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text4()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text4().data(), this->text4().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Complex.text4"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_enum1;
        break;
      }

      // optional .serialize.ENUMERATION enum1 = 9;
      case 9: {
        if (tag == 72) {
         parse_enum1:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum1(static_cast< ::serialize::ENUMERATION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_float1;
        break;
      }

      // optional double float1 = 10;
      case 10: {
        if (tag == 81) {
         parse_float1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &float1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_int4;
        break;
      }

      // optional int64 int4 = 11;
      case 11: {
        if (tag == 88) {
         parse_int4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_uint1;
        break;
      }

      // optional uint32 uint1 = 12;
      case 12: {
        if (tag == 96) {
         parse_uint1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_uint2;
        break;
      }

      // optional uint64 uint2 = 13;
      case 13: {
        if (tag == 104) {
         parse_uint2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_int5;
        break;
      }

      // optional int64 int5 = 14;
      case 14: {
        if (tag == 112) {
         parse_int5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_int6;
        break;
      }

      // optional int32 int6 = 15;
      case 15: {
        if (tag == 120) {
         parse_int6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int6_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_float2;
        break;
      }

      // optional double float2 = 16;
      case 16: {
        if (tag == 129) {
         parse_float2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &float2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_text5;
        break;
      }

      // optional string text5 = 17;
      case 17: {
        if (tag == 138) {
         parse_text5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text5().data(), this->text5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "serialize.Complex.text5"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:serialize.Complex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:serialize.Complex)
  return false;
#undef DO_
}

void Complex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:serialize.Complex)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string text1 = 2;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text1(), output);
  }

  // optional string text2 = 3;
  if (this->text2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text2().data(), this->text2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text2(), output);
  }

  // optional string text3 = 4;
  if (this->text3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text3().data(), this->text3().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text3(), output);
  }

  // optional int32 int1 = 5;
  if (this->int1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->int1(), output);
  }

  // optional int32 int2 = 6;
  if (this->int2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->int2(), output);
  }

  // optional int32 int3 = 7;
  if (this->int3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->int3(), output);
  }

  // optional string text4 = 8;
  if (this->text4().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text4().data(), this->text4().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->text4(), output);
  }

  // optional .serialize.ENUMERATION enum1 = 9;
  if (this->enum1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->enum1(), output);
  }

  // optional double float1 = 10;
  if (this->float1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->float1(), output);
  }

  // optional int64 int4 = 11;
  if (this->int4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->int4(), output);
  }

  // optional uint32 uint1 = 12;
  if (this->uint1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->uint1(), output);
  }

  // optional uint64 uint2 = 13;
  if (this->uint2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->uint2(), output);
  }

  // optional int64 int5 = 14;
  if (this->int5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->int5(), output);
  }

  // optional int32 int6 = 15;
  if (this->int6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->int6(), output);
  }

  // optional double float2 = 16;
  if (this->float2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->float2(), output);
  }

  // optional string text5 = 17;
  if (this->text5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text5().data(), this->text5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->text5(), output);
  }

  // @@protoc_insertion_point(serialize_end:serialize.Complex)
}

::google::protobuf::uint8* Complex::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:serialize.Complex)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string text1 = 2;
  if (this->text1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text1().data(), this->text1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text1(), target);
  }

  // optional string text2 = 3;
  if (this->text2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text2().data(), this->text2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text2(), target);
  }

  // optional string text3 = 4;
  if (this->text3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text3().data(), this->text3().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text3(), target);
  }

  // optional int32 int1 = 5;
  if (this->int1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->int1(), target);
  }

  // optional int32 int2 = 6;
  if (this->int2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->int2(), target);
  }

  // optional int32 int3 = 7;
  if (this->int3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->int3(), target);
  }

  // optional string text4 = 8;
  if (this->text4().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text4().data(), this->text4().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->text4(), target);
  }

  // optional .serialize.ENUMERATION enum1 = 9;
  if (this->enum1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->enum1(), target);
  }

  // optional double float1 = 10;
  if (this->float1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->float1(), target);
  }

  // optional int64 int4 = 11;
  if (this->int4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->int4(), target);
  }

  // optional uint32 uint1 = 12;
  if (this->uint1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->uint1(), target);
  }

  // optional uint64 uint2 = 13;
  if (this->uint2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->uint2(), target);
  }

  // optional int64 int5 = 14;
  if (this->int5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->int5(), target);
  }

  // optional int32 int6 = 15;
  if (this->int6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->int6(), target);
  }

  // optional double float2 = 16;
  if (this->float2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->float2(), target);
  }

  // optional string text5 = 17;
  if (this->text5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text5().data(), this->text5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "serialize.Complex.text5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->text5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:serialize.Complex)
  return target;
}

int Complex::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:serialize.Complex)
  int total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional string text1 = 2;
  if (this->text1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text1());
  }

  // optional string text2 = 3;
  if (this->text2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text2());
  }

  // optional string text3 = 4;
  if (this->text3().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text3());
  }

  // optional int32 int1 = 5;
  if (this->int1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int1());
  }

  // optional int32 int2 = 6;
  if (this->int2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int2());
  }

  // optional int32 int3 = 7;
  if (this->int3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int3());
  }

  // optional string text4 = 8;
  if (this->text4().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text4());
  }

  // optional .serialize.ENUMERATION enum1 = 9;
  if (this->enum1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum1());
  }

  // optional double float1 = 10;
  if (this->float1() != 0) {
    total_size += 1 + 8;
  }

  // optional int64 int4 = 11;
  if (this->int4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int4());
  }

  // optional uint32 uint1 = 12;
  if (this->uint1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uint1());
  }

  // optional uint64 uint2 = 13;
  if (this->uint2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uint2());
  }

  // optional int64 int5 = 14;
  if (this->int5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int5());
  }

  // optional int32 int6 = 15;
  if (this->int6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int6());
  }

  // optional double float2 = 16;
  if (this->float2() != 0) {
    total_size += 2 + 8;
  }

  // optional string text5 = 17;
  if (this->text5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text5());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Complex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:serialize.Complex)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Complex* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Complex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:serialize.Complex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:serialize.Complex)
    MergeFrom(*source);
  }
}

void Complex::MergeFrom(const Complex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:serialize.Complex)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.text1().size() > 0) {

    text1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text1_);
  }
  if (from.text2().size() > 0) {

    text2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text2_);
  }
  if (from.text3().size() > 0) {

    text3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text3_);
  }
  if (from.int1() != 0) {
    set_int1(from.int1());
  }
  if (from.int2() != 0) {
    set_int2(from.int2());
  }
  if (from.int3() != 0) {
    set_int3(from.int3());
  }
  if (from.text4().size() > 0) {

    text4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text4_);
  }
  if (from.enum1() != 0) {
    set_enum1(from.enum1());
  }
  if (from.float1() != 0) {
    set_float1(from.float1());
  }
  if (from.int4() != 0) {
    set_int4(from.int4());
  }
  if (from.uint1() != 0) {
    set_uint1(from.uint1());
  }
  if (from.uint2() != 0) {
    set_uint2(from.uint2());
  }
  if (from.int5() != 0) {
    set_int5(from.int5());
  }
  if (from.int6() != 0) {
    set_int6(from.int6());
  }
  if (from.float2() != 0) {
    set_float2(from.float2());
  }
  if (from.text5().size() > 0) {

    text5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text5_);
  }
}

void Complex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:serialize.Complex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Complex::CopyFrom(const Complex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:serialize.Complex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Complex::IsInitialized() const {

  return true;
}

void Complex::Swap(Complex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Complex::InternalSwap(Complex* other) {
  std::swap(id_, other->id_);
  text1_.Swap(&other->text1_);
  text2_.Swap(&other->text2_);
  text3_.Swap(&other->text3_);
  std::swap(int1_, other->int1_);
  std::swap(int2_, other->int2_);
  std::swap(int3_, other->int3_);
  text4_.Swap(&other->text4_);
  std::swap(enum1_, other->enum1_);
  std::swap(float1_, other->float1_);
  std::swap(int4_, other->int4_);
  std::swap(uint1_, other->uint1_);
  std::swap(uint2_, other->uint2_);
  std::swap(int5_, other->int5_);
  std::swap(int6_, other->int6_);
  std::swap(float2_, other->float2_);
  text5_.Swap(&other->text5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Complex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Complex_descriptor_;
  metadata.reflection = Complex_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Complex

// optional int64 id = 1;
void Complex::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Complex::id() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.id)
  return id_;
}
 void Complex::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.id)
}

// optional string text1 = 2;
void Complex::clear_text1() {
  text1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Complex::text1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text1)
  return text1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_text1(const ::std::string& value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text1)
}
 void Complex::set_text1(const char* value) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text1)
}
 void Complex::set_text1(const char* value, size_t size) {
  
  text1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text1)
}
 ::std::string* Complex::mutable_text1() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text1)
  return text1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Complex::release_text1() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text1)
  
  return text1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_allocated_text1(::std::string* text1) {
  if (text1 != NULL) {
    
  } else {
    
  }
  text1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text1);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text1)
}

// optional string text2 = 3;
void Complex::clear_text2() {
  text2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Complex::text2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text2)
  return text2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_text2(const ::std::string& value) {
  
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text2)
}
 void Complex::set_text2(const char* value) {
  
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text2)
}
 void Complex::set_text2(const char* value, size_t size) {
  
  text2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text2)
}
 ::std::string* Complex::mutable_text2() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text2)
  return text2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Complex::release_text2() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text2)
  
  return text2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_allocated_text2(::std::string* text2) {
  if (text2 != NULL) {
    
  } else {
    
  }
  text2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text2);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text2)
}

// optional string text3 = 4;
void Complex::clear_text3() {
  text3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Complex::text3() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text3)
  return text3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_text3(const ::std::string& value) {
  
  text3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text3)
}
 void Complex::set_text3(const char* value) {
  
  text3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text3)
}
 void Complex::set_text3(const char* value, size_t size) {
  
  text3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text3)
}
 ::std::string* Complex::mutable_text3() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text3)
  return text3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Complex::release_text3() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text3)
  
  return text3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_allocated_text3(::std::string* text3) {
  if (text3 != NULL) {
    
  } else {
    
  }
  text3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text3);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text3)
}

// optional int32 int1 = 5;
void Complex::clear_int1() {
  int1_ = 0;
}
 ::google::protobuf::int32 Complex::int1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int1)
  return int1_;
}
 void Complex::set_int1(::google::protobuf::int32 value) {
  
  int1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int1)
}

// optional int32 int2 = 6;
void Complex::clear_int2() {
  int2_ = 0;
}
 ::google::protobuf::int32 Complex::int2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int2)
  return int2_;
}
 void Complex::set_int2(::google::protobuf::int32 value) {
  
  int2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int2)
}

// optional int32 int3 = 7;
void Complex::clear_int3() {
  int3_ = 0;
}
 ::google::protobuf::int32 Complex::int3() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int3)
  return int3_;
}
 void Complex::set_int3(::google::protobuf::int32 value) {
  
  int3_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int3)
}

// optional string text4 = 8;
void Complex::clear_text4() {
  text4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Complex::text4() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text4)
  return text4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_text4(const ::std::string& value) {
  
  text4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text4)
}
 void Complex::set_text4(const char* value) {
  
  text4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text4)
}
 void Complex::set_text4(const char* value, size_t size) {
  
  text4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text4)
}
 ::std::string* Complex::mutable_text4() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text4)
  return text4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Complex::release_text4() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text4)
  
  return text4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_allocated_text4(::std::string* text4) {
  if (text4 != NULL) {
    
  } else {
    
  }
  text4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text4);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text4)
}

// optional .serialize.ENUMERATION enum1 = 9;
void Complex::clear_enum1() {
  enum1_ = 0;
}
 ::serialize::ENUMERATION Complex::enum1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.enum1)
  return static_cast< ::serialize::ENUMERATION >(enum1_);
}
 void Complex::set_enum1(::serialize::ENUMERATION value) {
  
  enum1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.enum1)
}

// optional double float1 = 10;
void Complex::clear_float1() {
  float1_ = 0;
}
 double Complex::float1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.float1)
  return float1_;
}
 void Complex::set_float1(double value) {
  
  float1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.float1)
}

// optional int64 int4 = 11;
void Complex::clear_int4() {
  int4_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Complex::int4() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int4)
  return int4_;
}
 void Complex::set_int4(::google::protobuf::int64 value) {
  
  int4_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int4)
}

// optional uint32 uint1 = 12;
void Complex::clear_uint1() {
  uint1_ = 0u;
}
 ::google::protobuf::uint32 Complex::uint1() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.uint1)
  return uint1_;
}
 void Complex::set_uint1(::google::protobuf::uint32 value) {
  
  uint1_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.uint1)
}

// optional uint64 uint2 = 13;
void Complex::clear_uint2() {
  uint2_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Complex::uint2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.uint2)
  return uint2_;
}
 void Complex::set_uint2(::google::protobuf::uint64 value) {
  
  uint2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.uint2)
}

// optional int64 int5 = 14;
void Complex::clear_int5() {
  int5_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Complex::int5() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int5)
  return int5_;
}
 void Complex::set_int5(::google::protobuf::int64 value) {
  
  int5_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int5)
}

// optional int32 int6 = 15;
void Complex::clear_int6() {
  int6_ = 0;
}
 ::google::protobuf::int32 Complex::int6() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.int6)
  return int6_;
}
 void Complex::set_int6(::google::protobuf::int32 value) {
  
  int6_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.int6)
}

// optional double float2 = 16;
void Complex::clear_float2() {
  float2_ = 0;
}
 double Complex::float2() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.float2)
  return float2_;
}
 void Complex::set_float2(double value) {
  
  float2_ = value;
  // @@protoc_insertion_point(field_set:serialize.Complex.float2)
}

// optional string text5 = 17;
void Complex::clear_text5() {
  text5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Complex::text5() const {
  // @@protoc_insertion_point(field_get:serialize.Complex.text5)
  return text5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_text5(const ::std::string& value) {
  
  text5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:serialize.Complex.text5)
}
 void Complex::set_text5(const char* value) {
  
  text5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:serialize.Complex.text5)
}
 void Complex::set_text5(const char* value, size_t size) {
  
  text5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:serialize.Complex.text5)
}
 ::std::string* Complex::mutable_text5() {
  
  // @@protoc_insertion_point(field_mutable:serialize.Complex.text5)
  return text5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Complex::release_text5() {
  // @@protoc_insertion_point(field_release:serialize.Complex.text5)
  
  return text5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Complex::set_allocated_text5(::std::string* text5) {
  if (text5 != NULL) {
    
  } else {
    
  }
  text5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text5);
  // @@protoc_insertion_point(field_set_allocated:serialize.Complex.text5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace serialize

// @@protoc_insertion_point(global_scope)
